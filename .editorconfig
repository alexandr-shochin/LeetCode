root=true

# All files
[*]
indent_style=space
max_line_length=160

# ReSharper properties
resharper_space_within_single_line_array_initializer_braces=true

# Code files
[*.{cs,csx,vb,vbx}]
indent_size=4
insert_final_newline=true
charset=utf-8

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size=2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size=2

# JSON files
[*.json]
indent_size=2

# Powershell files
[*.ps1]
indent_size=2

# Shell script files
[*.sh]
end_of_line=lf
indent_size=2

# Protobuf files
[*.proto]
indent_size = 2
indent_style = space
max_line_length = 80
ij_continuation_indent_size = 0
ij_protobuf_keep_blank_lines_in_code = 2
ij_protobuf_keep_indents_on_empty_lines = false
ij_protobuf_keep_line_breaks = true
ij_protobuf_space_after_comma = true
ij_protobuf_space_before_comma = false
ij_protobuf_spaces_around_assignment_operators = true
ij_protobuf_spaces_within_braces = false
ij_protobuf_spaces_within_brackets = false

# C# code style settings:
[*.cs]

# this and Me preferences

# IDE0003 and IDE0009: this and Me preferences, avoid this and Me if not necessary
dotnet_style_qualification_for_field=false:suggestion
dotnet_style_qualification_for_property=false:suggestion
dotnet_style_qualification_for_method=false:suggestion
dotnet_style_qualification_for_event=false:suggestion

# Use language keywords for types:

# IDE0049: Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members=true:suggestion
dotnet_style_predefined_type_for_member_access=true:suggestion

# Modifier preferences:

# IDE0036: Order modifiers
dotnet_diagnostic.ide0036.severity=suggestion

# IDE0040: Add accessibility modifiers
dotnet_diagnostic.ide0040.severity=suggestion

# IDE0044: Add readonly modifier
dotnet_diagnostic.ide0044.severity=suggestion

# Parentheses preferences:

# IDE0047 and IDE0048: Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators=always_for_clarity:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = always_for_clarity:suggestion

# Expression-level preferences:

# IDE0010: Add missing cases to switch statement
dotnet_diagnostic.ide0010.severity=suggestion

# IDE0017: Use object initializers
dotnet_style_object_initializer=true:suggestion

# IDE0018: Inline variable declaration
csharp_style_inlined_variable_declaration=true:suggestion

# IDE0028: Use collection initializers
dotnet_style_collection_initializer=true:suggestion

# IDE0032: Use auto property
dotnet_style_prefer_auto_properties=true:suggestion

# IDE0033: Use explicitly provided tuple name
dotnet_style_explicit_tuple_names=true:suggestion

# IDE0034: Simplify 'default' expression
csharp_prefer_simple_default_expression=true:suggestion

# IDE0037: Use inferred member name
dotnet_style_prefer_inferred_tuple_names=false:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names=false:suggestion

# IDE0039: Use local function instead of lambda
csharp_style_pattern_local_over_anonymous_function=true:suggestion

# IDE0042: Deconstruct variable declaration
csharp_style_deconstructed_variable_declaration=false:suggestion

# IDE0045: Use conditional expression for assignment
dotnet_style_prefer_conditional_expression_over_assignment=true:suggestion

# IDE0046: Use conditional expression for return
dotnet_style_prefer_conditional_expression_over_return=true:suggestion

# IDE0054: Use compound assignment
dotnet_style_prefer_compound_assignment=true:suggestion

# IDE0056: Use index operator
csharp_style_prefer_index_operator=false:suggestion

# IDE0057: Use range operator
csharp_style_prefer_range_operator=false:suggestion

# IDE0070: Use 'System.HashCode.Combine'
dotnet_diagnostic.ide0070.severity=suggestion

# IDE0071: Simplify interpolation
dotnet_style_prefer_simplified_interpolation=true:suggestion

# IDE0075: Simplify conditional expression
dotnet_style_prefer_simplified_boolean_expressions=true:suggestion

# IDE0082: Convert typeof to nameof
dotnet_diagnostic.ide0082.severity=suggestion

# IDE0090: Simplify new expression
csharp_style_implicit_object_creation_when_type_is_apparent=true:suggestion

# Null-checking preferences:

# IDE0016: Use throw expression
csharp_style_throw_expression=true:suggestion

# IDE0029 and IDE0030: Use coalesce expression
dotnet_style_coalesce_expression=true:suggestion

# IDE0031: Use null propagation
dotnet_style_null_propagation=true:suggestion

# IDE0041: Use is null check
dotnet_style_prefer_is_null_check_over_reference_equality_method=true:suggestion

# IDE1005: Use conditional delegate call
csharp_style_conditional_delegate_call=true:suggestion

# var preferences:

# IDE0007 and IDE0008: 'var' preferences
csharp_style_var_for_built_in_types=true:suggestion
csharp_style_var_when_type_is_apparent=true:suggestion
csharp_style_var_elsewhere=true:suggestion

# IDE0021: Use expression body for constructors
csharp_style_expression_bodied_constructors=true:suggestion

# IDE0022: Use expression body for methods
csharp_style_expression_bodied_methods=true:suggestion

# IDE0023: Use expression body for operators
csharp_style_expression_bodied_operators=true:suggestion

# IDE0025: Use expression body for properties
csharp_style_expression_bodied_properties=true:suggestion

# IDE0026: Use expression body for indexers
csharp_style_expression_bodied_indexers=true:suggestion

# IDE0027: Use expression body for accessors
csharp_style_expression_bodied_accessors=true:suggestion

# IDE0053: Use expression body for lambdas
csharp_style_expression_bodied_lambdas=true:suggestion

# IDE0061: Use expression body for local functions
csharp_style_expression_bodied_local_functions=true:suggestion

# Pattern matching preferences:

# IDE0019: Use pattern matching to avoid 'as' followed by a 'null' check
csharp_style_pattern_matching_over_as_with_null_check=true:suggestion

# IDE0020 and IDE0038: Use pattern matching to avoid 'is' check followed by a cast
csharp_style_pattern_matching_over_is_with_cast_check=true:suggestion

# IDE0066: Use switch expression
csharp_style_prefer_switch_expression=true:suggestion

# IDE0078: Use pattern matching
csharp_style_prefer_pattern_matching=true:suggestion

# IDE0083: Use pattern matching (not operator)
csharp_style_prefer_not_pattern=true:suggestion

# Code block preferences:

# IDE0011: Add braces
csharp_prefer_braces=when_multiline:suggestion

# IDE0063: Use simple 'using' statement
csharp_prefer_simple_using_statement=false:suggestion

# 'using' directive placement:

# IDE0065: 'using' directive placement
csharp_using_directive_placement=outside_namespace:suggestion

# Unnecessary code rules:

# IDE0001: Simplify name
dotnet_diagnostic.ide0001.severity=suggestion

# IDE0002: Simplify member access
dotnet_diagnostic.ide0002.severity=suggestion

# IDE0004: Remove unnecessary cast
dotnet_diagnostic.ide0004.severity=suggestion

# IDE0005: Remove unnecessary import
dotnet_diagnostic.ide0005.severity=suggestion

# IDE0035: Remove unreachable code
dotnet_diagnostic.ide0035.severity=suggestion

# IDE0051: Remove unused private member
dotnet_diagnostic.ide0051.severity=suggestion

# IDE0052: Remove unread private member
dotnet_diagnostic.ide0052.severity=suggestion

# IDE0058: Remove unnecessary expression value
csharp_style_unused_value_expression_statement_preference=unused_local_variable:suggestion

# IDE0059: Remove unnecessary value assignment
csharp_style_unused_value_assignment_preference=unused_local_variable:suggestion

# IDE0100: Remove unnecessary equality operator
dotnet_diagnostic.ide0100.severity=suggestion

# Formatting rules:

# IDE0055: Fix formatting
dotnet_diagnostic.ide0055.severity=suggestion

# Organize using directives:
dotnet_sort_system_directives_first=true
dotnet_separate_import_directive_groups=false

# Dotnet namespace options:
dotnet_style_namespace_match_folder=true

# New-line options:
csharp_new_line_before_open_brace=all
csharp_new_line_before_else=true
csharp_new_line_before_catch=true
csharp_new_line_before_finally=true
csharp_new_line_before_members_in_object_initializers=true
csharp_new_line_before_members_in_anonymous_types=true
csharp_new_line_between_query_expression_clauses=true

# Indentation options:
csharp_indent_case_contents=true
csharp_indent_switch_labels=true
csharp_indent_labels=flush_left
csharp_indent_block_contents=true
csharp_indent_braces=false
csharp_indent_case_contents_when_block=true

# Spacing options:
csharp_space_after_cast=false
csharp_space_after_colon_in_inheritance_clause=true
csharp_space_after_comma=true
csharp_space_after_dot=false
csharp_space_after_keywords_in_control_flow_statements=true
csharp_space_after_semicolon_in_for_statement=true
csharp_space_around_binary_operators=before_and_after
csharp_space_around_declaration_statements=false
csharp_space_before_colon_in_inheritance_clause=true
csharp_space_before_comma=false
csharp_space_before_dot=false
csharp_space_before_open_square_brackets=false
csharp_space_before_semicolon_in_for_statement=false
csharp_space_between_empty_square_brackets=false
csharp_space_between_method_call_empty_parameter_list_parentheses=false
csharp_space_between_method_call_name_and_opening_parenthesis=false
csharp_space_between_method_call_parameter_list_parentheses=false
csharp_space_between_method_declaration_empty_parameter_list_parentheses=false
csharp_space_between_method_declaration_name_and_open_parenthesis=false
csharp_space_between_method_declaration_parameter_list_parentheses=false
csharp_space_between_parentheses=false
csharp_space_between_square_brackets=false

# Wrap options:
csharp_preserve_single_line_statements=false
csharp_preserve_single_line_blocks=true

# Code-style naming rules:
dotnet_naming_style.interface_upper_camel_case_style.capitalization=pascal_case
dotnet_naming_style.interface_upper_camel_case_style.required_prefix=I
dotnet_naming_style.lower_camel_case_style.capitalization=camel_case
dotnet_naming_style.private_field_lower_camel_case_style.capitalization=camel_case
dotnet_naming_style.private_field_lower_camel_case_style.required_prefix=_
dotnet_naming_style.generic_type_parameter_upper_camel_case_style.capitalization=pascal_case
dotnet_naming_style.generic_type_parameter_upper_camel_case_style.required_prefix=T
dotnet_naming_style.upper_camel_case_style.capitalization=pascal_case

# Types and namespaces
dotnet_naming_rule.types_and_namespaces_rule.severity=suggestion
dotnet_naming_rule.types_and_namespaces_rule.style=upper_camel_case_style
dotnet_naming_rule.types_and_namespaces_rule.symbols=types_and_namespaces_symbols
dotnet_naming_symbols.types_and_namespaces_symbols.applicable_accessibilities=*
dotnet_naming_symbols.types_and_namespaces_symbols.applicable_kinds=namespace,class,struct,enum,delegate

# Interface
dotnet_naming_rule.interfaces_rule.severity=suggestion
dotnet_naming_rule.interfaces_rule.style=interface_upper_camel_case_style
dotnet_naming_rule.interfaces_rule.symbols=interfaces_symbols
dotnet_naming_symbols.interfaces_symbols.applicable_accessibilities=*
dotnet_naming_symbols.interfaces_symbols.applicable_kinds=interface

# Generic Type Parameters
dotnet_naming_rule.generic_type_parameter_rule.severity=suggestion
dotnet_naming_rule.generic_type_parameter_rule.style=generic_type_parameter_upper_camel_case_style
dotnet_naming_rule.generic_type_parameter_rule.symbols=generic_type_parameter_rule_symbols
dotnet_naming_symbols.generic_type_parameter_rule_symbols.applicable_accessibilities=*
dotnet_naming_symbols.generic_type_parameter_rule_symbols.applicable_kinds=type_parameter

# public fields
dotnet_naming_rule.public_fields_rule.severity=suggestion
dotnet_naming_rule.public_fields_rule.style=upper_camel_case_style
dotnet_naming_rule.public_fields_rule.symbols=public_fields_symbols
dotnet_naming_symbols.public_fields_symbols.applicable_accessibilities=public
dotnet_naming_symbols.public_fields_symbols.applicable_kinds=field

# private fields
dotnet_naming_rule.private_fields_rule.severity=suggestion
dotnet_naming_rule.private_fields_rule.style=private_field_lower_camel_case_style
dotnet_naming_rule.private_fields_rule.symbols=private_fields_symbols
dotnet_naming_symbols.private_fields_symbols.applicable_accessibilities=private
dotnet_naming_symbols.private_fields_symbols.applicable_kinds=field

# protected fields
dotnet_naming_rule.protected_fields_rule.severity=suggestion
dotnet_naming_rule.protected_fields_rule.style=lower_camel_case_style
dotnet_naming_rule.protected_fields_rule.symbols=protected_fields_symbols
dotnet_naming_symbols.protected_fields_symbols.applicable_accessibilities=protected, protected_internal, private_protected
dotnet_naming_symbols.protected_fields_symbols.applicable_kinds=field

# non-private readonly fields
dotnet_naming_rule.non_private_readonly_fields_rule.severity=suggestion
dotnet_naming_rule.non_private_readonly_fields_rule.symbols=non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_rule.style=upper_camel_case_style
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities=public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds=field
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers=readonly

# private static fields
dotnet_naming_rule.private_static_fields_rule.severity=suggestion
dotnet_naming_rule.private_static_fields_rule.style=private_field_lower_camel_case_style
dotnet_naming_rule.private_static_fields_rule.symbols=private_static_fields_symbols
dotnet_naming_symbols.private_static_fields_symbols.applicable_accessibilities=private
dotnet_naming_symbols.private_static_fields_symbols.applicable_kinds=field
dotnet_naming_symbols.private_static_fields_symbols.required_modifiers=static

# private static readonly
dotnet_naming_rule.private_static_readonly_rule.severity=suggestion
dotnet_naming_rule.private_static_readonly_rule.style=upper_camel_case_style
dotnet_naming_rule.private_static_readonly_rule.symbols=private_static_readonly_symbols
dotnet_naming_symbols.private_static_readonly_symbols.applicable_accessibilities=private
dotnet_naming_symbols.private_static_readonly_symbols.applicable_kinds=field
dotnet_naming_symbols.private_static_readonly_symbols.required_modifiers=static,readonly

# static_readonly
dotnet_naming_rule.static_readonly_rule.severity=suggestion
dotnet_naming_rule.static_readonly_rule.style=upper_camel_case_style
dotnet_naming_rule.static_readonly_rule.symbols=static_readonly_symbols
dotnet_naming_symbols.static_readonly_symbols.applicable_accessibilities=public,internal,protected,protected_internal,private_protected
dotnet_naming_symbols.static_readonly_symbols.applicable_kinds=field
dotnet_naming_symbols.static_readonly_symbols.required_modifiers=static,readonly

# Constants
dotnet_naming_rule.constants_rule.severity=suggestion
dotnet_naming_rule.constants_rule.style=upper_camel_case_style
dotnet_naming_rule.constants_rule.symbols=constants_symbols
dotnet_naming_symbols.constants_symbols.applicable_accessibilities=*
dotnet_naming_symbols.constants_symbols.applicable_kinds=field, local
dotnet_naming_symbols.constants_symbols.required_modifiers=const

# Properties
dotnet_naming_rule.property_rule.severity=suggestion
dotnet_naming_rule.property_rule.style=upper_camel_case_style
dotnet_naming_rule.property_rule.symbols=property_symbols
dotnet_naming_symbols.property_symbols.applicable_accessibilities=*
dotnet_naming_symbols.property_symbols.applicable_kinds=property

# Events
dotnet_naming_rule.event_rule.severity=suggestion
dotnet_naming_rule.event_rule.style=upper_camel_case_style
dotnet_naming_rule.event_rule.symbols=event_symbols
dotnet_naming_symbols.event_symbols.applicable_accessibilities=*
dotnet_naming_symbols.event_symbols.applicable_kinds=event

# Methods
dotnet_naming_rule.method_rule.severity=suggestion
dotnet_naming_rule.method_rule.style=upper_camel_case_style
dotnet_naming_rule.method_rule.symbols=method_symbols
dotnet_naming_symbols.method_symbols.applicable_accessibilities=*
dotnet_naming_symbols.method_symbols.applicable_kinds=method

# Local methods
dotnet_naming_rule.local_functions_rule.severity=suggestion
dotnet_naming_rule.local_functions_rule.style=upper_camel_case_style
dotnet_naming_rule.local_functions_rule.symbols=local_functions_symbols
dotnet_naming_symbols.local_functions_symbols.applicable_accessibilities=*
dotnet_naming_symbols.local_functions_symbols.applicable_kinds=local_function

# Local variables
dotnet_naming_rule.local_variables_rule.severity=suggestion
dotnet_naming_rule.local_variables_rule.style=lower_camel_case_style
dotnet_naming_rule.local_variables_rule.symbols=local_variables_symbols
dotnet_naming_symbols.local_variables_symbols.applicable_accessibilities=*
dotnet_naming_symbols.local_variables_symbols.applicable_kinds=local

# Parameters
dotnet_naming_rule.parameters_rule.severity=suggestion
dotnet_naming_rule.parameters_rule.style=lower_camel_case_style
dotnet_naming_rule.parameters_rule.symbols=parameters_symbols
dotnet_naming_symbols.parameters_symbols.applicable_accessibilities=*
dotnet_naming_symbols.parameters_symbols.applicable_kinds=parameter